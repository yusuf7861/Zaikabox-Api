openapi: 3.1.0
info:
  title: ZaikaBox API
  description: This is the API documentation for the ZaikaBox application built using
    Spring Boot.
  contact:
    name: Yusuf Jamal
    email: yjamal710@gmail.com
  version: v1
externalDocs:
  description: Project Docs
  url: https://github.com/yusuf7861/Zaikabox-Api
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/v1/orders/{orderId}:
    get:
      tags:
      - billing-controller
      operationId: getOrder
      parameters:
      - name: orderId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrderResponse"
    put:
      tags:
      - billing-controller
      operationId: updateOrderStatus
      parameters:
      - name: orderId
        in: path
        required: true
        schema:
          type: string
      - name: status
        in: query
        required: true
        schema:
          type: string
          enum:
          - PENDING
          - DELIVERED
          - PROCESSING
          - CANCELLED
      responses:
        "200":
          description: OK
    delete:
      tags:
      - billing-controller
      operationId: deleteOrder
      parameters:
      - name: orderId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/carts:
    get:
      tags:
      - cart-controller
      operationId: getCart
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CartResponse"
    put:
      tags:
      - cart-controller
      operationId: updateCart
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CartRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CartResponse"
    delete:
      tags:
      - cart-controller
      operationId: clearCart
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CartResponse"
  /contact-us:
    post:
      tags:
      - contact-us-controller
      operationId: setContactUsEmailService
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContactUsRequest"
        required: true
      responses:
        "200":
          description: OK
  /api/v1/users/verify-otp:
    post:
      tags:
      - user-controller
      operationId: verifyOtp
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/users/send-reset-otp:
    post:
      tags:
      - user-controller
      operationId: sendResetPasswordOTP
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/users/reset-password:
    post:
      tags:
      - user-controller
      operationId: resetPassword
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/users/register:
    post:
      tags:
      - user-controller
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/users/logout:
    post:
      tags:
      - user-controller
      operationId: logout
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/users/login:
    post:
      tags:
      - user-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthenticationRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/orders:
    get:
      tags:
      - billing-controller
      operationId: getOrders
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderResponse"
    post:
      tags:
      - billing-controller
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrderResponse"
  /api/v1/foods:
    get:
      tags:
      - food-controller
      operationId: readFoods
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FoodResponse"
    post:
      tags:
      - food-controller
      operationId: addFood
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                food:
                  type: string
                file:
                  type: string
                  format: binary
              required:
              - file
              - food
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FoodResponse"
  /api/v1/carts/items/{foodId}:
    post:
      tags:
      - cart-controller
      operationId: addToCart
      parameters:
      - name: foodId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CartResponse"
    delete:
      tags:
      - cart-controller
      operationId: removeFromCart
      parameters:
      - name: foodId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CartResponse"
  /api/v1/users/profile:
    get:
      tags:
      - user-controller
      operationId: getUserProfile
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponse"
  /api/v1/users/is-authenticated:
    get:
      tags:
      - user-controller
      operationId: isAuthenticated
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/users/admin/users:
    get:
      tags:
      - user-controller
      operationId: getAllUsers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/orders/{orderId}/bill/text:
    get:
      tags:
      - billing-controller
      operationId: generateTextBill
      parameters:
      - name: orderId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: byte
  /api/v1/orders/{orderId}/bill/pdf:
    get:
      tags:
      - billing-controller
      operationId: generatePdfBill
      parameters:
      - name: orderId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: byte
  /api/v1/orders/status/{status}:
    get:
      tags:
      - billing-controller
      operationId: getOrdersByStatus
      parameters:
      - name: status
        in: path
        required: true
        schema:
          type: string
          enum:
          - PENDING
          - DELIVERED
          - PROCESSING
          - CANCELLED
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderResponse"
  /api/v1/foods/{id}:
    get:
      tags:
      - food-controller
      operationId: readFood
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FoodResponse"
    delete:
      tags:
      - food-controller
      operationId: deleteFood
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
  /api/v1/users:
    delete:
      tags:
      - user-controller
      operationId: deleteUser
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
components:
  schemas:
    CartRequest:
      type: object
      properties:
        userId:
          type: string
        items:
          type: object
          additionalProperties:
            type: integer
            format: int32
    CartResponse:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        items:
          type: object
          additionalProperties:
            type: integer
            format: int32
    ContactUsRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        subject:
          type: string
        message:
          type: string
    UserRequest:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
    AuthenticationRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    BillingDetails:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        address:
          type: string
        zip:
          type: string
        locality:
          type: string
        landmark:
          type: string
        country:
          type: string
        state:
          type: string
    OrderItemRequest:
      type: object
      properties:
        foodId:
          type: string
        quantity:
          type: integer
          format: int32
    OrderRequest:
      type: object
      properties:
        paymentMode:
          type: string
        items:
          type: array
          items:
            $ref: "#/components/schemas/OrderItemRequest"
        useCart:
          type: boolean
        billingDetails:
          $ref: "#/components/schemas/BillingDetails"
    OrderItemResponse:
      type: object
      properties:
        name:
          type: string
        quantity:
          type: integer
          format: int32
        unitPrice:
          type: number
          format: double
        total:
          type: number
          format: double
    OrderResponse:
      type: object
      properties:
        orderId:
          type: string
        customerId:
          type: string
        items:
          type: array
          items:
            $ref: "#/components/schemas/OrderItemResponse"
        subTotal:
          type: number
          format: double
        gstRate:
          type: number
          format: double
        gstAmount:
          type: number
          format: double
        totalAmountWithGST:
          type: number
          format: double
        paymentMode:
          type: string
        orderDate:
          type: string
          format: date-time
        status:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        address:
          type: string
        zip:
          type: string
        locality:
          type: string
        landmark:
          type: string
        country:
          type: string
        state:
          type: string
    FoodResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: double
        category:
          type: string
        imageUrl:
          type: string
    UserResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        role:
          type: string
          enum:
          - ADMIN
          - CUSTOMER
